/**
\mainpage

   <br>

   @b OMPL (Open Motion Planning Library) consists of a set of
   sampling-based motion planning algorithms. The content of the
   library is limited to these algorithms, which means there is no
   environment specification, no collision detection or
   visualisation. The library is designed so it can be easily
   integrated into systems that provide the additional needed
   components. For examples of complete systems using OMPL, see <a
   href="http://ompl.kavrakilab.org">ompl-app</a> and <a
   href="http://www.ros.org/wiki/ompl">ROS</a>.

   OMPL is intended to be efficient, easy to use, easily extensible
   and freely available.

   <br>

   There are four main components: 
   - the state manifold (ompl::base::StateManifold) we are planning in, and a control manifold (ompl::control::ControlManifold), if planning with controls
   - the space information (ompl::base::SpaceInformation), which is constructed from the state manifold (and the control manifold, if planning with controls - ompl::control::SpaceInformation)
   - the problem definition (ompl::base::ProblemDefinition)
   - the planner (ompl::base::Planner)

   <br>

   These components can be easily used with
   ompl::geometric::SimpleSetup or ompl::control::SimpleSetup.

   <hr> 

   The code in this library is meant to be thread safe. All static,
   non-member or const member functions are thread safe. Calling
   member functions that are not const in multiple threads
   simultaneously is unsafe and locks should be used.
   
   <br>
   
   <a href="gettingStarted.html"><b>Start using OMPL</b></a>.

   <br>

   Visit this project on <a href="http://sourceforge.net/projects/ompl/">SourceForge</a>.

*/
